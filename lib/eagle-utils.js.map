{"version":3,"file":"eagle-utils.js","sources":["../src/isObject.ts","../src/isNull.ts","../src/isObjectLike.ts","../src/internal/getTag.ts","../src/isNumber.ts","../src/isPlainObject.ts","../src/isString.ts","../src/validator/phoneNumber.ts"],"sourcesContent":["export default function isObject(value: any) {\r\n    const type = typeof value;\r\n    return value != null && (type === 'object' || type === 'function'); // lodash写法\r\n    // return type === 'function' || type === 'object' && !!obj;  // underscore写法\r\n}\r\n","function isNull(value: any) {\r\n    return value === null;\r\n}\r\n\r\nexport default isNull;\r\n","export function isObjectLike(value: any) {\r\n    return typeof value === 'object' && value !== null;\r\n}\r\n\r\nexport default isObjectLike;\r\n","const toString = Object.prototype.toString\r\n\r\nfunction getTag(value:any) {\r\n  if (value == null) {\r\n    return value === undefined ? '[object Undefined]' : '[object Null]'\r\n  }\r\n  return toString.call(value)\r\n}\r\n\r\nexport default getTag","import isObjectLike from './isObjectLike';\r\nimport getTag from './internal/getTag';\r\n\r\nexport default function isNumber(value: any) {\r\n    return typeof value === 'number' || (isObjectLike(value) && getTag(value) == '[object Number]');\r\n}\r\n","import getTag from './internal/getTag';\r\nimport isObjectLike from './isObjectLike';\r\n\r\nfunction isPlainObject(value:any) {\r\n    if (!isObjectLike(value) || getTag(value) != '[object Object]') {\r\n        return false;\r\n    }\r\n    if (Object.getPrototypeOf(value) === null) {\r\n        return true;\r\n    }\r\n    let proto = value;\r\n    while (Object.getPrototypeOf(proto) !== null) {\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return Object.getPrototypeOf(value) === proto;\r\n}\r\n\r\nexport default isPlainObject;\r\n","import getTag from './internal/getTag';\r\nfunction isString(value: any) {\r\n    const type = typeof value;\r\n    return (\r\n        type === 'string' ||\r\n        (type === 'object' && value != null && !Array.isArray(value) && getTag(value) == '[object String]')\r\n    );\r\n}\r\n\r\nexport default isString;\r\n","// 正则表达式来源  github\r\n// 地址：\r\n// https://github.com/VincentSit/ChinaMobilePhoneNumberRegex/blob/master/README-CN.md\r\n\r\n\r\n// 匹配所有号码（手机卡 + 数据卡 + 上网卡）\r\nconst allPhoneRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3\\d{3}|5[^4\\D]\\d{2}|8\\d{3}|7(?:[0-35-9]\\d{2}|4(?:0\\d|1[0-2]|9\\d))|9[0-35-9]\\d{2}|6[2567]\\d{2}|4(?:(?:10|4[01])\\d{3}|[68]\\d{4}|[579]\\d{2}))\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配所有支持短信功能的号码（手机卡 + 上网卡）\r\nconst smsMobilePhoneRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3\\d{3}|5[^4\\D]\\d{2}|8\\d{3}|7(?:[0-35-9]\\d{2}|4(?:0\\d|1[0-2]|9\\d))|9[0-35-9]\\d{2}|6[2567]\\d{2}|4[579]\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 手机卡\r\n\r\n// 匹配所有手机卡\r\nconst allMobilePhoneRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3\\d{3}|5[^4\\D]\\d{2}|8\\d{3}|7(?:[235-8]\\d{2}|4(?:0\\d|1[0-2]|9\\d))|9[0-35-9]\\d{2}|66\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配中国移动\r\nconst chinaMobileRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3(?:4[^9\\D]|[5-9]\\d)|5[^3-6\\D]\\d|7[28]\\d|8[23478]\\d|9[578]\\d)\\d{7}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配中国联通\r\nconst chinaUnicomRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3[0-2]|[578][56]|66|96)\\d{8}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配中国电信\r\nconst chinaTelecomRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3(?:3\\d|49)\\d|53\\d{2}|8[019]\\d{2}|7(?:[37]\\d{2}|40[0-5])|9[0139]\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配中国广电\r\nexport const broadcastRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3(?:3\\d|49)\\d|53\\d{2}|8[019]\\d{2}|7(?:[37]\\d{2}|40[0-5])|9[0139]\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配北京船舶通信导航有限公司（海事卫星通信）\r\nconst InmarsatRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1749\\d{7}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 工业和信息化部应急通信保障中心（应急通信）\r\nconst miitRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?174(?:0[6-9]|1[0-2])\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 虚拟运营商\r\n\r\n// 匹配所有\r\nconst allMobilePhoneVisualRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3\\d{3}|5[^4\\D]\\d{2}|8\\d{3}|7(?:[235-8]\\d{2}|4(?:0\\d|1[0-2]|9\\d))|9[0-35-9]\\d{2}|66\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n\r\n// 匹配中国移动\r\nconst chinaMobileVisualRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3(?:4[^9\\D]|[5-9]\\d)|5[^3-6\\D]\\d|7[28]\\d|8[23478]\\d|9[578]\\d)\\d{7}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n\r\n// 匹配中国联通\r\nconst chinaUnicomVisualRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3[0-2]|[578][56]|66|96)\\d{8}$/;\r\n    return reg.test(params);\r\n};\r\n\r\n// 匹配中国电信\r\nconst chinaTelecomVisualRegular = function(params: string): boolean {\r\n    const reg = /^(?:\\+?86)?1(?:3(?:3\\d|49)\\d|53\\d{2}|8[019]\\d{2}|7(?:[37]\\d{2}|40[0-5])|9[0139]\\d{2})\\d{6}$/;\r\n    return reg.test(params);\r\n};\r\n\r\nexport default {\r\n    allPhoneRegular,\r\n    smsMobilePhoneRegular,\r\n    allMobilePhoneRegular,\r\n    chinaMobileRegular,\r\n    chinaUnicomRegular,\r\n    chinaTelecomRegular,\r\n    broadcastRegular,\r\n    InmarsatRegular,\r\n    miitRegular,\r\n    allMobilePhoneVisualRegular,\r\n    chinaMobileVisualRegular,\r\n    chinaUnicomVisualRegular,\r\n    chinaTelecomVisualRegular\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":["isObject","value","type","isNull","isObjectLike","toString","Object","prototype","getTag","undefined","call","isNumber","isPlainObject","getPrototypeOf","proto","isString","Array","isArray","allPhoneRegular","params","reg","test","smsMobilePhoneRegular","allMobilePhoneRegular","chinaMobileRegular","chinaUnicomRegular","chinaTelecomRegular","broadcastRegular","InmarsatRegular","miitRegular","allMobilePhoneVisualRegular","chinaMobileVisualRegular","chinaUnicomVisualRegular","chinaTelecomVisualRegular"],"mappings":"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"}